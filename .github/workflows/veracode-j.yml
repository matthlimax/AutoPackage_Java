name: Veracode Scan 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build Maven
    runs-on: ubuntu-latest #executa o job dentro de uma maquina ubuntu
    steps:
    - uses: actions/checkout@v1 # puxa os arquivos do repositório para a máquina
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1 # utiliza pulgin do java
      with:
        java-version: 1.8
    - name: Build with Maven # realiza o comando Maven para build da app
      run: |
        mvn clean package install
        pwd
        ls -l  
      # salva o verademo.war para ser usado no Policy Scan e Pipeline Scan
    - name: Salvando artefato
      uses: actions/upload-artifact@v3
      with:
          name: verademo.war
          path: target/verademo.war

  Veracode-SAST-Policy-Scan:
    runs-on: ubuntu-latest
    container:
      image: veracode/api-wrapper-java:latest
      options: --user root
    steps:
      - uses: actions/checkout@master
      - name: scan 
        run: |
          zip -r target/verademo.war . -x "*node_modules" "*.git" -i "*.js"  "*.html"  "*.htm"  "*.ts"  "*.tsx"  "*.json"  "*.css"  "*.jsp"  "*.vue"
          java -jar /opt/veracode/api-wrapper.jar -vid "${{ secrets.VERACODE_ID }}" -vkey "${{ secrets.VERACODE_KEY }}" -action UploadAndScan -createprofile false -appname "verademo java.matheus" -version "${{ github.run_id }}" -filepath target/verademo.war

  Veracode-SAST-Pipeline-Scan:
    runs-on: ubuntu-latest
    container:
      image: veracode/pipeline-scan:latest
      options: --user root
    steps:
      - name: checkout
        uses: actions/checkout@master
          
      - name: scan 
        run: |
          zip -r target/verademo.war . -x "*node_modules" "*.git" -i "*.js"  "*.html"  "*.htm"  "*.ts"  "*.tsx"  "*.json"  "*.css"  "*.jsp"  "*.vue"
          java -jar /opt/veracode/pipeline-scan.jar -vid "${{ secrets.VERACODE_ID }}" -vkey "${{ secrets.VERACODE_KEY }}" -f target/verademo.war
    continue-on-error: true